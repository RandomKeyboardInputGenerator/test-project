.alert.alert-info(*ngIf='appSettings.isDataNotLoaded()')
	.alert-box
		.loader
	.alert-box
		| {{ appSettings.getLoaderText() }}
                
.layout(*ngIf='appSettings.isDataLoaded()')
	.top.nowrap
		.back-button
			button.back-button((click)='goBackButton()')
				span.left-pointing-angle
		.q-title {{ dictionary.questionTitle }}
		.add-button
			button.add-button
				span.plus-sign
		span.q-last-time-dis
			span {{ dictionary.lastDiscussionTimeDescription }} {{ dictionary.lastDiscussionTimeStatic }}
                        
	.body
		.question.clear
			.question-col-left
				.question-row-title
					.question-avatar((click)='openModal(question.authorId)')
						img.img-circle(src='{{ getAvatar(question.authorId) }}', alt='...')
					.question-author((click)='openModal(question.authorId)')
						span.question-author-name {{ getUserName(question.authorId) }}
						span.description {{ dictionary.questionAuthorDescription[1] }}
					.question-title.nowrap
						span {{ question.title }}
				.question-row-content
					.question-desc
						span {{ question.content }}
			.question-col-right
				.question-row-options
					button.button-link {{ dictionary.unfollowButton }}
				.question-row-votes
					.question-votes-couter
						span {{ question.upvotes - question.downvotes | abs }}
					.question-votes-couter-desc
						span(*ngIf='countVotes(question) < 0') {{ dictionary.downVote }}
						span(*ngIf='countVotes(question) >= 0') {{ dictionary.upVote }}
					.question-vote
						ul.vote
							li.vote-up([class.disabled]='isQuestionVotingDisabled(question.id)')
								span.up-pointing-triangle((click)='questionUpVote(question)')
							li.vote-down([class.disabled]='isQuestionVotingDisabled(question.id)')
								span.down-pointing-triangle((click)='questionDownVote(question)')
		.question-footer
			button.question-btn {{ dictionary.newAnswerButton }}
                        
		.comments-count
			span.comments-count-number {{ question.peersAnswered }}
			span {{ dictionary.peersAnswered }} {{ getUserName(question.authorId) }}
                        
		div(*ngFor='let relatedComment of relatedComments; index as _i;')
			.comment.clear
				.comment-col-left
					.comment-row-title
						.comment-avatar((click)='openModal(relatedComment.authorId)')
							img.img-circle(src='{{ getAvatar(relatedComment.authorId) }}', alt='...')
						.comment-author((click)='openModal(relatedComment.authorId)')
							span.comment-author-name {{ getUserName(relatedComment.authorId) }}
							span.description.space.dot {{ dictionary.commentAuthorDescription }}
							span.comment-author-time {{ relatedComment.time }}
						.comment-desc
							span {{ relatedComment.content }}
				.comment-col-right
					.comment-row-votes
						.comment-votes-couter
							span {{ relatedComment.upvotes - relatedComment.downvotes | abs }}
						.comment-votes-couter-desc
							span(*ngIf='countVotes(relatedComment) < 0') {{ dictionary.downVote }}
							span(*ngIf='countVotes(relatedComment) >= 0') {{ dictionary.upVote }}
						.comment-vote
							ul.vote
								li.vote-up([class.disabled]='isCommentVotingDisabled(relatedComment.id)')
									span.up-pointing-triangle((click)='commentUpVote(relatedComment)')
								li.vote-down([class.disabled]='isCommentVotingDisabled(relatedComment.id)')
									span.down-pointing-triangle((click)='commentDownVote(relatedComment)')
			.comment-footer(*ngIf='!relatedComment.relatedDiscussion')
				button.comment-btn {{ dictionary.commentButton }}
                                
			div(*ngFor='let subRelatedComment of subRelatedComments | limitCommentsByAnswer:relatedComment.id; index as _i; last as _end;')
				.subcomment.clear
					.subcomment-col-left
						.subcomment-row-title
							.subcomment-avatar((click)='openModal(subRelatedComment.authorId)')
								img.img-circle(src='{{ getAvatar(subRelatedComment.authorId) }}', alt='...')
							.subcomment-author((click)='openModal(subRelatedComment.authorId)')
								span.subcomment-author-name {{ getUserName(subRelatedComment.authorId) }}
								span.description.space.dot {{ dictionary.commentAuthorDescription }}
								span.subcomment-author-time {{ subRelatedComment.time }}
							.subcomment-desc
								span {{ subRelatedComment.content }}
					.subcomment-col-right
						.subcomment-row-votes
							.subcomment-votes-couter
								span {{ subRelatedComment.upvotes - subRelatedComment.downvotes | abs }}
							.subcomment-votes-couter-desc
								span(*ngIf='countVotes(subRelatedComment) < 0') {{ dictionary.downVote }}
								span(*ngIf='countVotes(subRelatedComment) >= 0') {{ dictionary.upVote }}
							.subcomment-vote
								ul.vote
									li.vote-up([class.disabled]='isCommentVotingDisabled(subRelatedComment.id)')
										span.up-pointing-triangle((click)='commentUpVote(subRelatedComment)')
									li.vote-down([class.disabled]='isCommentVotingDisabled(subRelatedComment.id)')
										span.down-pointing-triangle((click)='commentDownVote(subRelatedComment)')
				.subcomment-footer(*ngIf='_end')
					button.subcomment-btn {{ dictionary.continueDiscussionButton }}
